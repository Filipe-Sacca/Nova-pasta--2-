version: '3.8'

# Docker Swarm Stack with Secrets (Production)
# Use this version for production deployments with sensitive data in Docker secrets

secrets:
  supabase_url:
    external: true
  supabase_anon_key:
    external: true
  supabase_service_key:
    external: true

services:
  backend:
    image: paxley/plano-certo-backend:latest
    networks:
      - traefik-public
      - internal
    secrets:
      - supabase_url
      - supabase_anon_key
      - supabase_service_key
    environment:
      # Read secrets from files
      - SUPABASE_URL_FILE=/run/secrets/supabase_url
      - SUPABASE_ANON_KEY_FILE=/run/secrets/supabase_anon_key
      - SUPABASE_SERVICE_KEY_FILE=/run/secrets/supabase_service_key
      # Server Configuration
      - PORT=3010
      - NODE_ENV=production
      # iFood API Configuration
      - IFOOD_API_URL=https://merchant-api.ifood.com.br/authentication/v1.0/oauth/token
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints:
          - node.role == worker
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 5s
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
      labels:
        # Traefik Configuration
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"
        # HTTP Router
        - "traefik.http.routers.plano-certo-backend.rule=Host(`api.planocerto.com`)"
        - "traefik.http.routers.plano-certo-backend.entrypoints=websecure"
        - "traefik.http.routers.plano-certo-backend.tls=true"
        - "traefik.http.routers.plano-certo-backend.tls.certresolver=letsencrypt"
        - "traefik.http.routers.plano-certo-backend.service=plano-certo-backend"
        # Service Configuration
        - "traefik.http.services.plano-certo-backend.loadbalancer.server.port=3010"
        - "traefik.http.services.plano-certo-backend.loadbalancer.healthcheck.path=/health"
        - "traefik.http.services.plano-certo-backend.loadbalancer.healthcheck.interval=10s"
        - "traefik.http.services.plano-certo-backend.loadbalancer.healthcheck.timeout=3s"
        # Middleware
        - "traefik.http.routers.plano-certo-backend.middlewares=backend-headers,backend-compress,backend-ratelimit"
        # Headers
        - "traefik.http.middlewares.backend-headers.headers.customResponseHeaders.Access-Control-Allow-Origin=*"
        - "traefik.http.middlewares.backend-headers.headers.customResponseHeaders.Access-Control-Allow-Methods=GET,POST,PUT,DELETE,OPTIONS,PATCH"
        - "traefik.http.middlewares.backend-headers.headers.customResponseHeaders.Access-Control-Allow-Headers=*"
        - "traefik.http.middlewares.backend-headers.headers.sslredirect=true"
        - "traefik.http.middlewares.backend-headers.headers.stsSeconds=31536000"
        # Compression
        - "traefik.http.middlewares.backend-compress.compress=true"
        # Rate Limit
        - "traefik.http.middlewares.backend-ratelimit.ratelimit.average=100"
        - "traefik.http.middlewares.backend-ratelimit.ratelimit.burst=50"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3010/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    image: paxley/plano-certo-frontend:latest
    networks:
      - traefik-public
    deploy:
      mode: replicated
      replicas: 2
      placement:
        constraints:
          - node.role == worker
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 5s
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
      labels:
        # Traefik Configuration
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"
        # HTTP Router
        - "traefik.http.routers.plano-certo-frontend.rule=Host(`app.planocerto.com`)"
        - "traefik.http.routers.plano-certo-frontend.entrypoints=websecure"
        - "traefik.http.routers.plano-certo-frontend.tls=true"
        - "traefik.http.routers.plano-certo-frontend.tls.certresolver=letsencrypt"
        - "traefik.http.routers.plano-certo-frontend.service=plano-certo-frontend"
        # Service Configuration - Port 3000 (serve)
        - "traefik.http.services.plano-certo-frontend.loadbalancer.server.port=3000"
        - "traefik.http.services.plano-certo-frontend.loadbalancer.healthcheck.path=/"
        - "traefik.http.services.plano-certo-frontend.loadbalancer.healthcheck.interval=10s"
        - "traefik.http.services.plano-certo-frontend.loadbalancer.healthcheck.timeout=3s"
        # Middleware
        - "traefik.http.routers.plano-certo-frontend.middlewares=frontend-headers,frontend-compress"
        # Headers
        - "traefik.http.middlewares.frontend-headers.headers.customResponseHeaders.X-Frame-Options=SAMEORIGIN"
        - "traefik.http.middlewares.frontend-headers.headers.customResponseHeaders.X-Content-Type-Options=nosniff"
        - "traefik.http.middlewares.frontend-headers.headers.customResponseHeaders.X-XSS-Protection=1; mode=block"
        - "traefik.http.middlewares.frontend-headers.headers.sslredirect=true"
        - "traefik.http.middlewares.frontend-headers.headers.stsSeconds=31536000"
        # Compression
        - "traefik.http.middlewares.frontend-compress.compress=true"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  traefik-public:
    external: true
  internal:
    driver: overlay
    attachable: true
